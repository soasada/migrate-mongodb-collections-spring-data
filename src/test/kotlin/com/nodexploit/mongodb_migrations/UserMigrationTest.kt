package com.nodexploit.mongodb_migrations

import kotlinx.coroutines.reactive.awaitFirstOrNull
import kotlinx.coroutines.runBlocking
import org.junit.jupiter.api.Assertions.assertTrue
import org.junit.jupiter.api.Test
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.boot.test.context.SpringBootTest
import org.springframework.data.mongodb.core.ReactiveMongoTemplate

@SpringBootTest
internal class UserMigrationTest {

    @Autowired
    private lateinit var mongoTemplate: ReactiveMongoTemplate

    @Autowired
    private lateinit var userRepository: UserRepository

    @Test
    fun `Should migrate an old user`() {
        runBlocking {
            val userV0 = UserFactory.version0()
            val userId = userV0.getString("_id")
            mongoTemplate.save(userV0, "user").awaitFirstOrNull()
            val userMigrated = userRepository.find(userId)
            val emailConfirmed = userMigrated?.emailConfirmed ?: false
            assertTrue(emailConfirmed)
        }
    }
}